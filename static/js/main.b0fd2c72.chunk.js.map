{"version":3,"sources":["components/category/categories.tsx","components/header/header.tsx","components/states/productListState.ts","components/specificationCard/specificicationCard.tsx","components/cartControl/cartControl.tsx","components/product/product.tsx","components/detailCard/detailCard.tsx","components/productList/products.tsx","components/shoopCart/shopCart.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["CategoryComponent","name","position","currentPosition","active","undefined","className","CategoriesComponent","props","categories","map","category","index","HeaderComponent","products","data","productListState","atom","key","default","selectedProductsStatState","selector","get","count","reduce","sum","product","isNaN","subtotal","price","detailCardState","SpecificationCard","SpecificationContent","specification","content","item","chosen","uuid","specifications","elem","description","mandatory","multiChoice","replaceItemAtIndex","arr","newValue","slice","CartControl","useRecoilState","setProducts","idx","findIndex","listItem","useState","showSpecification","setShowSpecification","length","onClick","e","stopPropagation","newList","style","display","currentCount","ProductComponent","memo","setDetailProduct","useSetRecoilState","src","icon","alt","toFixed","DetailCard","image","allergens","acc","allergen","ProductsComponent","useRecoilValue","detailProduct","ShopCart","preventDefault","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b0fd2c72.chunk.js","sourcesContent":["import React from 'react';\r\nimport Category from \"../model/category\";\r\nimport './categories.css'\r\n\r\n\r\ninterface IProp {\r\n    name: string\r\n    position: number | undefined\r\n    currentPosition: number | undefined\r\n}\r\n\r\nconst CategoryComponent = ({name, position, currentPosition}: IProp) => {\r\n\r\n    const active = currentPosition !== undefined && position !== undefined && currentPosition === position\r\n    return (\r\n        <div className={\"category-tag\" + (active?\" category-tag-active\":\"\")}>{name}</div>\r\n    )\r\n}\r\n\r\n\r\n\r\ninterface IProps{\r\n    categories: Array<Category>\r\n}\r\n\r\nconst CategoriesComponent = (props :IProps) => {\r\n\r\n    return (\r\n        <div className=\"categories-container\">{\r\n            props.categories.map((category, index) => {\r\n                return <CategoryComponent name={category.name} key={index} currentPosition={0} position={index}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoriesComponent;\r\n","import React from 'react';\r\nimport './header.css'\r\n\r\n\r\n\r\nconst HeaderComponent = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"header-wrapper \">\r\n                <h1 className=\"title\">Restaurante</h1>\r\n                <p className=\"subtitle\">This area it's full customizable for each restaurant</p>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n","import {atom, selector} from \"recoil\";\r\nimport Product from \"../model/product\";\r\nimport menu from \"../../static/menu.json\";\r\n\r\nconst products: any[] = menu.data\r\n\r\nexport const productListState = atom<Product[]>(\r\n    {\r\n        key: 'productListState',\r\n        default: products as Product[]\r\n    }\r\n)\r\n\r\n\r\nexport const selectedProductsStatState = selector(\r\n    {\r\n        key: 'selectedProductNumState',\r\n        get: ({get}) => {\r\n            const products = get(productListState)\r\n            let count = products.reduce((sum, product) => isNaN(product.count) ? sum : product.count + sum, 0)\r\n            let subtotal = products.reduce((sum, product) => isNaN(product.count) ? sum : product.count * product.price + sum, 0)\r\n            return {\r\n                count,\r\n                subtotal\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\nexport const detailCardState = atom<Product | null>({\r\n        key: 'detailCardState',\r\n        default: null,\r\n    }\r\n)\r\n\r\n\r\nexport default productListState\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Product from \"../model/product\";\r\nimport React from \"react\";\r\nimport Specification from \"../model/specification\";\r\n\r\n\r\n\r\nconst SpecificationCard = ({...product}:Product) => {\r\n\r\n\r\n    const SpecificationContent = (specification: Specification) => {\r\n        return (\r\n            <div className=\"specification-container\">\r\n                <div className=\"specification-title\">\r\n                    {specification.name}\r\n                </div>\r\n                <div className=\"specification-attr\">\r\n\r\n                    {specification.content.map((item => {\r\n                        return <div key={item.uuid} className={item.chosen ? \"tag-chosen\" : \"tag\"}>\r\n                            {item.name}\r\n                        </div>\r\n                    }))}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-title\">\r\n                {product.name}\r\n            </div>\r\n            {product.specifications &&\r\n            product.specifications?.map((elem) => {\r\n                return <SpecificationContent key={elem.uuid} uuid={elem.uuid} name={elem.name}\r\n                                          description={elem.description}\r\n                                          mandatory={elem.mandatory} multiChoice={elem.multiChoice}\r\n                                          content={elem.content}/>\r\n            })\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SpecificationCard\r\n","import React, { useState } from 'react'\r\nimport './cartContrl.css'\r\nimport '../../css/icon.css'\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { productListState } from \"../states/productListState\";\r\nimport Product from \"../model/product\";\r\nimport SpecificationCard from \"../specificationCard/specificicationCard\";\r\n\r\n\r\nfunction replaceItemAtIndex(arr: any, index: any, newValue: any) {\r\n    return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\r\n}\r\n\r\nfunction removeItemAtIndex(arr: any, index: any) {\r\n    return [...arr.slice(0, index), ...arr.slice(index + 1)];\r\n}\r\n\r\nconst CartControl = ({ ...product }: Product) => {\r\n    const [products, setProducts] = useRecoilState(productListState);\r\n    const idx = products.findIndex((listItem) => listItem.uuid === product.uuid)\r\n    const [showSpecification, setShowSpecification] = useState(false);\r\n    const decreaseCart = (e: React.MouseEvent) => {\r\n        e.stopPropagation()\r\n        if (products[idx].count > 0) {\r\n            const newList = replaceItemAtIndex(products, idx, {\r\n                ...product,\r\n                count: product.count - 1,\r\n            });\r\n            setProducts(newList)\r\n        }\r\n    }\r\n\r\n    const addCart = (e: React.MouseEvent) => {\r\n        e.stopPropagation()\r\n        let currentCount = isNaN(products[idx].count) ? 1 : product.count + 1\r\n\r\n        const newList = replaceItemAtIndex(products, idx, {\r\n            ...product,\r\n            count: currentCount,\r\n        });\r\n        setProducts(newList)\r\n\r\n\r\n    }\r\n\r\n    const selectionEvent = (e: React.MouseEvent) => {\r\n        e.stopPropagation()\r\n        setShowSpecification(true)\r\n    }\r\n\r\n    if (products[idx].specifications?.length) {\r\n        return (\r\n            <>\r\n                {<div className=\"cart-control\">\r\n                    <div className=\"choose\" onClick={selectionEvent}>\r\n                        + Seleccione\r\n                    </div>\r\n                    <div className=\"choose-num\">1</div>\r\n                </div>\r\n                }\r\n                {showSpecification &&\r\n                    <div className=\"specification-card-container\">\r\n                        <SpecificationCard {...product} />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"cart-control\">\r\n                <div className={'cart-decrease' + (product && product.count ? ' move' : '')}\r\n                    onClick={decreaseCart}>\r\n                    <span className=\"inner icon-remove_circle_outline\" />\r\n                </div>\r\n\r\n                <div className=\"cart-count\"\r\n                    style={product && product.count ?\r\n                        {} : { display: 'none' }}>{product && product.count}</div>\r\n                <div className=\"cart-add icon-add_circle\" onClick={addCart} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CartControl\r\n","import React, {memo} from 'react';\r\nimport Product from '../model/product';\r\nimport './product.css'\r\nimport CartControl from \"../cartControl/cartControl\";\r\nimport {useSetRecoilState} from \"recoil\";\r\nimport {detailCardState} from \"../states/productListState\";\r\n\r\n\r\nconst ProductComponent = memo(({...product}: Product) => {\r\n    const getPrice = () => {\r\n        return product.price.toFixed(2)\r\n    }\r\n    const setDetailProduct = useSetRecoilState(detailCardState)\r\n\r\n    return (\r\n        <div className=\"food-wrapper\" onClick={() => setDetailProduct(product)}>\r\n            <img className=\"product-img\" src={product.icon} alt={product.name}/>\r\n            <div className=\"product-info\">\r\n                <h2 className=\"product-name text-gray-900 font-bold text-base\">{product.name}</h2>\r\n                <p className=\"product-description  text-gray-600 text-xs\">{product.description}</p>\r\n                <div className='price-wrapper'>\r\n                    {product.price &&\r\n                    <span className=\"product-price text-base font-bold text-orange-600\">{getPrice()} €</span>}\r\n                    <div className=\"cart-control-container\"><CartControl {...product}/></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default ProductComponent\r\n","import Product from \"../model/product\";\r\nimport React from \"react\";\r\nimport './detailCard.css'\r\nimport CartControl from \"../cartControl/cartControl\";\r\n\r\n\r\n\r\nexport const DetailCard = ({...product}:Product) => {\r\n\r\n\r\n    const getAllergen = (): string => {\r\n        if (product.allergens) {\r\n            return product.allergens.reduce((acc, allergen, idx, allergens) => {\r\n                acc += idx != allergens.length - 1 ? `${allergen.name}, ` : `y ${allergen.name}`\r\n                return acc\r\n            }, \"\")\r\n        }\r\n        return \"\"\r\n\r\n    }\r\n\r\n    return (\r\n            <div className=\"card-detail\">\r\n                <div className=\"product-title\">{product.name}</div>\r\n                <img className=\"product-img\" src={product.image} alt={product.name}/>\r\n                {product.description.length > 0 && <div className=\"description-info\">\r\n                    <h2>Descripción</h2>\r\n                    <p>{product.description}</p>\r\n                </div>}\r\n                {(product.allergens!.length > 0) && <div className=\"allergen-info\">\r\n                    <h2>Alergeno</h2>\r\n                    <p>{getAllergen()}</p>\r\n                </div>}\r\n                <div className=\"detail-control\">\r\n                    <CartControl {...product}/>\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailCard\r\n","import React from 'react';\r\nimport ProductComponent from '../product/product';\r\nimport Product from \"../model/product\";\r\nimport {useRecoilState, useRecoilValue} from \"recoil\";\r\nimport {detailCardState, productListState} from \"../states/productListState\";\r\nimport DetailCard from \"../detailCard/detailCard\";\r\nimport './products.css'\r\n\r\nconst ProductsComponent = () => {\r\n    const products = useRecoilValue(productListState);\r\n    const [detailProduct,setDetailProduct] = useRecoilState(detailCardState)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"menu-container\">\r\n                {\r\n                    products.map((item) => {\r\n                        return <ProductComponent key={item.uuid} {...item as Product}/>\r\n                    })\r\n                }\r\n                {detailProduct && <div className=\"card-mask\">\r\n                    <DetailCard {...detailProduct}/>\r\n                    <div className=\"close\" onClick={()=>setDetailProduct(null)}>\r\n                        <button>X</button>\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductsComponent;\r\n","import './shopcart.css'\r\nimport React from \"react\";\r\nimport {useRecoilValue} from \"recoil\";\r\nimport {selectedProductsStatState,} from \"../states/productListState\";\r\n\r\n\r\nconst ShopCart = () => {\r\n    const {count, subtotal} = useRecoilValue(selectedProductsStatState);\r\n\r\n\r\n    // show shop cart list\r\n    const toggleList = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    //order button action\r\n    const pay = (e: React.MouseEvent) => {\r\n\r\n    }\r\n\r\n\r\n    const payDesc = (): string => {\r\n        if (count === 0) {\r\n            return 'Elija platos'\r\n        } else {\r\n            return 'Pedir'\r\n        }\r\n    }\r\n\r\n    const payClass = (): string => {\r\n        if (count === 0) {\r\n            return 'not-enough'\r\n        } else {\r\n            return 'enough'\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"shop-cart\" key=\"shop-cart\">\r\n            <div className=\"content\" onClick={toggleList}>\r\n                <div className=\"content-left\">\r\n                    <div className=\"logo-wrapper\">\r\n                        <div className={'logo' + (count > 0 ? ' highlight' : '')}>\r\n                            <i className={'icon-shopping_cart' + (count > 0 ? ' highlight' : '')}/>\r\n                        </div>\r\n                        <div className=\"num\" style={count > 0 ? {} : {display: 'none'}}>{count}</div>\r\n                    </div>\r\n                    <div className={'price' + (subtotal > 0 ? ' highlight' : '')}>{subtotal.toFixed(2)}€</div>\r\n                </div>\r\n                <div className=\"content-right\" onClick={pay}>\r\n                    <div className={'pay ' + payClass()}>\r\n                        {payDesc()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ShopCart\r\n","import React from 'react';\r\nimport CategoriesComponent from './components/category/categories';\r\nimport HeaderComponent from './components/header/header';\r\nimport ProductsComponent from './components/productList/products';\r\nimport Category from \"./components/model/category\";\r\nimport ShopCart from \"./components/shoopCart/shopCart\";\r\nimport category from \"./static/category.json\";\r\nimport {RecoilRoot} from \"recoil\";\r\nimport '../src/css/main.css'\r\n\r\nfunction App() {\r\n    const categories: Category[] = category as Category[]\r\n    return (\r\n        <div className=\"\">\r\n            <RecoilRoot>\r\n                <HeaderComponent/>\r\n                <CategoriesComponent categories={categories}/>\r\n                <ProductsComponent/>\r\n                <ShopCart/>\r\n            </RecoilRoot>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}